"use strict";(self.webpackChunkscanamo_website=self.webpackChunkscanamo_website||[]).push([[208],{3233:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>m});var a=t(4848),i=t(8453);const r={title:"Conditional Operations",sidebar_position:3},o=void 0,s={id:"conditional-operations",title:"Conditional Operations",description:"Modifying operations (Put, Delete, Update) can be performed conditionally, so that they only have an effect if some state of the DynamoDB table is true at the time of execution.",source:"@site/docs/conditional-operations.md",sourceDirName:".",slug:"/conditional-operations",permalink:"/conditional-operations",draft:!1,unlisted:!1,editUrl:"https://github.com/scanamo/scanamo/blob/main/docs/conditional-operations.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Conditional Operations",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Batch Operations",permalink:"/batch-operations"},next:{title:"Filters",permalink:"/filters"}},l={},m=[];function c(e){const n={a:"a",code:"code",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["Modifying operations (",(0,a.jsx)(n.a,{href:"/operations#put-and-get",children:"Put"}),", ",(0,a.jsx)(n.a,{href:"/operations#delete",children:"Delete"}),", ",(0,a.jsx)(n.a,{href:"/operations#update",children:"Update"}),") can be performed conditionally, so that they only have an effect if some state of the DynamoDB table is true at the time of execution."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:"import org.scanamo._\nimport org.scanamo.syntax._\nimport org.scanamo.generic.auto._\nimport software.amazon.awssdk.services.dynamodb.model.ScalarAttributeType._\nval client = LocalDynamoDB.syncClient()\nval scanamo = Scanamo(client)\ncase class Gremlin(number: Int, name: String, wet: Boolean, friendly: Boolean)\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:'val gremlinsTable = Table[Gremlin]("gremlins")\n// gremlinsTable: Table[Gremlin] = Table("gremlins")\nLocalDynamoDB.withTable(client)("gremlins")("number" -> N) {\n  val ops = for {\n    _ <- gremlinsTable.putAll(\n      Set(Gremlin(1, "Gizmo", false, true), Gremlin(2, "George", true, false)))\n    // Only `put` Gremlins if not already one with the same number\n    _ <- gremlinsTable.when(not(attributeExists("number")))\n      .put(Gremlin(2, "Stripe", false, true))\n    _ <- gremlinsTable.when(not(attributeExists("number")))\n      .put(Gremlin(3, "Greta", true, true))\n    allGremlins <- gremlinsTable.scan()  \n    _ <- gremlinsTable.when("wet" === true)\n      .delete("number" === 1)\n    _ <- gremlinsTable.when("wet" === true)\n      .delete("number" === 2)\n    _ <- gremlinsTable.when("wet" === true)\n      .update("number" === 1, set("friendly", false))\n    _ <- gremlinsTable.when("wet" === true)\n      .update("number" === 3, set("friendly", false))\n    remainingGremlins <- gremlinsTable.scan()\n  } yield (allGremlins, remainingGremlins)\n  scanamo.exec(ops)\n}\n// res0: (List[Either[DynamoReadError, Gremlin]], List[Either[DynamoReadError, Gremlin]]) = (\n//   List(\n//     Right(Gremlin(2, "George", true, false)),\n//     Right(Gremlin(1, "Gizmo", false, true)),\n//     Right(Gremlin(3, "Greta", true, true))\n//   ),\n//   List(\n//     Right(Gremlin(1, "Gizmo", false, true)),\n//     Right(Gremlin(3, "Greta", true, false))\n//   )\n// )\n'})}),"\n",(0,a.jsxs)(n.p,{children:["More examples can be found in the ",(0,a.jsx)(n.code,{children:"Table"})," scaladoc."]})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>s});var a=t(6540);const i={},r=a.createContext(i);function o(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);