
on:
  workflow_dispatch:
  push:
    tags:
      - "*"
    branches: [master, main]
  pull_request:
    branches: [master, main]
    types:
      - opened
      - synchronize
      - reopened
      - closed

jobs:
  check:
    strategy:
      matrix:
        os: ["ubuntu-latest"]
        version: ["2.12.16","2.13.8","3.2.0"]
        jdk: [graalvm@11]
    runs-on: ${{ matrix.os }} 
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Cache sbt
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}
      - name: lint
        run: >
          sbt ++${{ matrix.version }}
          scalafmtCheck
          test:scalafmtCheck
          scalafmtSbtCheck
      - name: test with coverage
        if: matrix.version == '2.12.16'
        run: >
          sbt ++${{ matrix.version }}
          coverage
          startDynamodbLocal
          test
          dynamodbLocalTestCleanup
          stopDynamodbLocal
      - name: test without coverage
        if: matrix.version == '2.13.8'
        run: >
          sbt ++${{ matrix.version }}
          startDynamodbLocal
          test
          dynamodbLocalTestCleanup
          stopDynamodbLocal
      - name: test without coverage
        if: matrix.version == '3.2.0'
        run: >
          sbt ++${{ matrix.version }}
          startDynamodbLocal
          scanamo/test catsEffect/test joda/test
          dynamodbLocalTestCleanup
          stopDynamodbLocal
      - name: cleanup
        run: bash <(curl -s https://codecov.io/bash)
  test_docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: test docs
        run: sbt +doc
  gen_microsite:
    needs: [check,test_docs]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: setup ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.6.0'
          bundler-cache: true
      - name: setup jekyll
        run: gem install jekyll -v 4.0.0
      - name: gen microsite
        run: sbt startDynamodbLocal makeMicrosite stopDynamodbLocal
  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [check,test_docs,gen_microsite]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: release
        run: sbt ci-release
        env:
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
